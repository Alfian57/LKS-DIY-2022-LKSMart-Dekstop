#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Toko
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LKSMart")]
	public partial class LKSMartDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDetailTransaction(DetailTransaction instance);
    partial void UpdateDetailTransaction(DetailTransaction instance);
    partial void DeleteDetailTransaction(DetailTransaction instance);
    partial void InsertHeaderTransaction(HeaderTransaction instance);
    partial void UpdateHeaderTransaction(HeaderTransaction instance);
    partial void DeleteHeaderTransaction(HeaderTransaction instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertPointHistory(PointHistory instance);
    partial void UpdatePointHistory(PointHistory instance);
    partial void DeletePointHistory(PointHistory instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public LKSMartDataContext() : 
				base(global::Toko.Properties.Settings.Default.LKSMartConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LKSMartDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LKSMartDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LKSMartDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LKSMartDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<DetailTransaction> DetailTransactions
		{
			get
			{
				return this.GetTable<DetailTransaction>();
			}
		}
		
		public System.Data.Linq.Table<HeaderTransaction> HeaderTransactions
		{
			get
			{
				return this.GetTable<HeaderTransaction>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<PointHistory> PointHistories
		{
			get
			{
				return this.GetTable<PointHistory>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _parent_id;
		
		private string _name;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<Category> _Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onparent_idChanging(System.Nullable<int> value);
    partial void Onparent_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Category()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_id", DbType="Int")]
		public System.Nullable<int> parent_id
		{
			get
			{
				return this._parent_id;
			}
			set
			{
				if ((this._parent_id != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_idChanging(value);
					this.SendPropertyChanging();
					this._parent_id = value;
					this.SendPropertyChanged("parent_id");
					this.Onparent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="id", OtherKey="parent_id")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="id", OtherKey="category_id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="parent_id", OtherKey="id", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._parent_id = value.id;
					}
					else
					{
						this._parent_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _pin_number;
		
		private System.Nullable<System.DateTime> _date_of_birth;
		
		private string _address;
		
		private string _gender;
		
		private int _point;
		
		private string _profile_image_name;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<HeaderTransaction> _HeaderTransactions;
		
		private EntitySet<PointHistory> _PointHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onpin_numberChanging(string value);
    partial void Onpin_numberChanged();
    partial void Ondate_of_birthChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_birthChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnpointChanging(int value);
    partial void OnpointChanged();
    partial void Onprofile_image_nameChanging(string value);
    partial void Onprofile_image_nameChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Customer()
		{
			this._HeaderTransactions = new EntitySet<HeaderTransaction>(new Action<HeaderTransaction>(this.attach_HeaderTransactions), new Action<HeaderTransaction>(this.detach_HeaderTransactions));
			this._PointHistories = new EntitySet<PointHistory>(new Action<PointHistory>(this.attach_PointHistories), new Action<PointHistory>(this.detach_PointHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pin_number", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string pin_number
		{
			get
			{
				return this._pin_number;
			}
			set
			{
				if ((this._pin_number != value))
				{
					this.Onpin_numberChanging(value);
					this.SendPropertyChanging();
					this._pin_number = value;
					this.SendPropertyChanged("pin_number");
					this.Onpin_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date")]
		public System.Nullable<System.DateTime> date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point", DbType="Int NOT NULL")]
		public int point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnpointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("point");
					this.OnpointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_image_name", DbType="VarChar(200)")]
		public string profile_image_name
		{
			get
			{
				return this._profile_image_name;
			}
			set
			{
				if ((this._profile_image_name != value))
				{
					this.Onprofile_image_nameChanging(value);
					this.SendPropertyChanging();
					this._profile_image_name = value;
					this.SendPropertyChanged("profile_image_name");
					this.Onprofile_image_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_HeaderTransaction", Storage="_HeaderTransactions", ThisKey="id", OtherKey="customer_id")]
		public EntitySet<HeaderTransaction> HeaderTransactions
		{
			get
			{
				return this._HeaderTransactions;
			}
			set
			{
				this._HeaderTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PointHistory", Storage="_PointHistories", ThisKey="id", OtherKey="customer_id")]
		public EntitySet<PointHistory> PointHistories
		{
			get
			{
				return this._PointHistories;
			}
			set
			{
				this._PointHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HeaderTransactions(HeaderTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_HeaderTransactions(HeaderTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_PointHistories(PointHistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_PointHistories(PointHistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailTransaction")]
	public partial class DetailTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _header_transaction_id;
		
		private int _product_id;
		
		private decimal _price;
		
		private int _quantity;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<HeaderTransaction> _HeaderTransaction;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onheader_transaction_idChanging(int value);
    partial void Onheader_transaction_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public DetailTransaction()
		{
			this._HeaderTransaction = default(EntityRef<HeaderTransaction>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_header_transaction_id", DbType="Int NOT NULL")]
		public int header_transaction_id
		{
			get
			{
				return this._header_transaction_id;
			}
			set
			{
				if ((this._header_transaction_id != value))
				{
					if (this._HeaderTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onheader_transaction_idChanging(value);
					this.SendPropertyChanging();
					this._header_transaction_id = value;
					this.SendPropertyChanged("header_transaction_id");
					this.Onheader_transaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeaderTransaction_DetailTransaction", Storage="_HeaderTransaction", ThisKey="header_transaction_id", OtherKey="id", IsForeignKey=true)]
		public HeaderTransaction HeaderTransaction
		{
			get
			{
				return this._HeaderTransaction.Entity;
			}
			set
			{
				HeaderTransaction previousValue = this._HeaderTransaction.Entity;
				if (((previousValue != value) 
							|| (this._HeaderTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeaderTransaction.Entity = null;
						previousValue.DetailTransactions.Remove(this);
					}
					this._HeaderTransaction.Entity = value;
					if ((value != null))
					{
						value.DetailTransactions.Add(this);
						this._header_transaction_id = value.id;
					}
					else
					{
						this._header_transaction_id = default(int);
					}
					this.SendPropertyChanged("HeaderTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailTransaction", Storage="_Product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DetailTransactions.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DetailTransactions.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeaderTransaction")]
	public partial class HeaderTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer_id;
		
		private int _payment_type_id;
		
		private System.DateTime _datetime;
		
		private decimal _sub_total;
		
		private int _point_used;
		
		private string _payment_code;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<DetailTransaction> _DetailTransactions;
		
		private EntitySet<PointHistory> _PointHistories;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<PaymentType> _PaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onpayment_type_idChanging(int value);
    partial void Onpayment_type_idChanged();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    partial void Onsub_totalChanging(decimal value);
    partial void Onsub_totalChanged();
    partial void Onpoint_usedChanging(int value);
    partial void Onpoint_usedChanged();
    partial void Onpayment_codeChanging(string value);
    partial void Onpayment_codeChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public HeaderTransaction()
		{
			this._DetailTransactions = new EntitySet<DetailTransaction>(new Action<DetailTransaction>(this.attach_DetailTransactions), new Action<DetailTransaction>(this.detach_DetailTransactions));
			this._PointHistories = new EntitySet<PointHistory>(new Action<PointHistory>(this.attach_PointHistories), new Action<PointHistory>(this.detach_PointHistories));
			this._Customer = default(EntityRef<Customer>);
			this._PaymentType = default(EntityRef<PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type_id", DbType="Int NOT NULL")]
		public int payment_type_id
		{
			get
			{
				return this._payment_type_id;
			}
			set
			{
				if ((this._payment_type_id != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_type_idChanging(value);
					this.SendPropertyChanging();
					this._payment_type_id = value;
					this.SendPropertyChanged("payment_type_id");
					this.Onpayment_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_total", DbType="Decimal(10,2) NOT NULL")]
		public decimal sub_total
		{
			get
			{
				return this._sub_total;
			}
			set
			{
				if ((this._sub_total != value))
				{
					this.Onsub_totalChanging(value);
					this.SendPropertyChanging();
					this._sub_total = value;
					this.SendPropertyChanged("sub_total");
					this.Onsub_totalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point_used", DbType="Int NOT NULL")]
		public int point_used
		{
			get
			{
				return this._point_used;
			}
			set
			{
				if ((this._point_used != value))
				{
					this.Onpoint_usedChanging(value);
					this.SendPropertyChanging();
					this._point_used = value;
					this.SendPropertyChanged("point_used");
					this.Onpoint_usedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_code", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string payment_code
		{
			get
			{
				return this._payment_code;
			}
			set
			{
				if ((this._payment_code != value))
				{
					this.Onpayment_codeChanging(value);
					this.SendPropertyChanging();
					this._payment_code = value;
					this.SendPropertyChanged("payment_code");
					this.Onpayment_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeaderTransaction_DetailTransaction", Storage="_DetailTransactions", ThisKey="id", OtherKey="header_transaction_id")]
		public EntitySet<DetailTransaction> DetailTransactions
		{
			get
			{
				return this._DetailTransactions;
			}
			set
			{
				this._DetailTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeaderTransaction_PointHistory", Storage="_PointHistories", ThisKey="id", OtherKey="header_transaction_id")]
		public EntitySet<PointHistory> PointHistories
		{
			get
			{
				return this._PointHistories;
			}
			set
			{
				this._PointHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_HeaderTransaction", Storage="_Customer", ThisKey="customer_id", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.HeaderTransactions.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.HeaderTransactions.Add(this);
						this._customer_id = value.id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_HeaderTransaction", Storage="_PaymentType", ThisKey="payment_type_id", OtherKey="id", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.HeaderTransactions.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.HeaderTransactions.Add(this);
						this._payment_type_id = value.id;
					}
					else
					{
						this._payment_type_id = default(int);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailTransactions(DetailTransaction entity)
		{
			this.SendPropertyChanging();
			entity.HeaderTransaction = this;
		}
		
		private void detach_DetailTransactions(DetailTransaction entity)
		{
			this.SendPropertyChanging();
			entity.HeaderTransaction = null;
		}
		
		private void attach_PointHistories(PointHistory entity)
		{
			this.SendPropertyChanging();
			entity.HeaderTransaction = this;
		}
		
		private void detach_PointHistories(PointHistory entity)
		{
			this.SendPropertyChanging();
			entity.HeaderTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentType")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<HeaderTransaction> _HeaderTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public PaymentType()
		{
			this._HeaderTransactions = new EntitySet<HeaderTransaction>(new Action<HeaderTransaction>(this.attach_HeaderTransactions), new Action<HeaderTransaction>(this.detach_HeaderTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_HeaderTransaction", Storage="_HeaderTransactions", ThisKey="id", OtherKey="payment_type_id")]
		public EntitySet<HeaderTransaction> HeaderTransactions
		{
			get
			{
				return this._HeaderTransactions;
			}
			set
			{
				this._HeaderTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HeaderTransactions(HeaderTransaction entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_HeaderTransactions(HeaderTransaction entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PointHistory")]
	public partial class PointHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer_id;
		
		private System.Nullable<int> _header_transaction_id;
		
		private System.Nullable<int> _point_gained;
		
		private System.Nullable<int> _point_deducted;
		
		private int _point_before;
		
		private int _point_after;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<HeaderTransaction> _HeaderTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onheader_transaction_idChanging(System.Nullable<int> value);
    partial void Onheader_transaction_idChanged();
    partial void Onpoint_gainedChanging(System.Nullable<int> value);
    partial void Onpoint_gainedChanged();
    partial void Onpoint_deductedChanging(System.Nullable<int> value);
    partial void Onpoint_deductedChanged();
    partial void Onpoint_beforeChanging(int value);
    partial void Onpoint_beforeChanged();
    partial void Onpoint_afterChanging(int value);
    partial void Onpoint_afterChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public PointHistory()
		{
			this._Customer = default(EntityRef<Customer>);
			this._HeaderTransaction = default(EntityRef<HeaderTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_header_transaction_id", DbType="Int")]
		public System.Nullable<int> header_transaction_id
		{
			get
			{
				return this._header_transaction_id;
			}
			set
			{
				if ((this._header_transaction_id != value))
				{
					if (this._HeaderTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onheader_transaction_idChanging(value);
					this.SendPropertyChanging();
					this._header_transaction_id = value;
					this.SendPropertyChanged("header_transaction_id");
					this.Onheader_transaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point_gained", DbType="Int")]
		public System.Nullable<int> point_gained
		{
			get
			{
				return this._point_gained;
			}
			set
			{
				if ((this._point_gained != value))
				{
					this.Onpoint_gainedChanging(value);
					this.SendPropertyChanging();
					this._point_gained = value;
					this.SendPropertyChanged("point_gained");
					this.Onpoint_gainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point_deducted", DbType="Int")]
		public System.Nullable<int> point_deducted
		{
			get
			{
				return this._point_deducted;
			}
			set
			{
				if ((this._point_deducted != value))
				{
					this.Onpoint_deductedChanging(value);
					this.SendPropertyChanging();
					this._point_deducted = value;
					this.SendPropertyChanged("point_deducted");
					this.Onpoint_deductedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point_before", DbType="Int NOT NULL")]
		public int point_before
		{
			get
			{
				return this._point_before;
			}
			set
			{
				if ((this._point_before != value))
				{
					this.Onpoint_beforeChanging(value);
					this.SendPropertyChanging();
					this._point_before = value;
					this.SendPropertyChanged("point_before");
					this.Onpoint_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_point_after", DbType="Int NOT NULL")]
		public int point_after
		{
			get
			{
				return this._point_after;
			}
			set
			{
				if ((this._point_after != value))
				{
					this.Onpoint_afterChanging(value);
					this.SendPropertyChanging();
					this._point_after = value;
					this.SendPropertyChanged("point_after");
					this.Onpoint_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_PointHistory", Storage="_Customer", ThisKey="customer_id", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.PointHistories.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.PointHistories.Add(this);
						this._customer_id = value.id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HeaderTransaction_PointHistory", Storage="_HeaderTransaction", ThisKey="header_transaction_id", OtherKey="id", IsForeignKey=true)]
		public HeaderTransaction HeaderTransaction
		{
			get
			{
				return this._HeaderTransaction.Entity;
			}
			set
			{
				HeaderTransaction previousValue = this._HeaderTransaction.Entity;
				if (((previousValue != value) 
							|| (this._HeaderTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HeaderTransaction.Entity = null;
						previousValue.PointHistories.Remove(this);
					}
					this._HeaderTransaction.Entity = value;
					if ((value != null))
					{
						value.PointHistories.Add(this);
						this._header_transaction_id = value.id;
					}
					else
					{
						this._header_transaction_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("HeaderTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _category_id;
		
		private string _name;
		
		private decimal _price;
		
		private int _stock;
		
		private string _image_name;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<DetailTransaction> _DetailTransactions;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnstockChanging(int value);
    partial void OnstockChanged();
    partial void Onimage_nameChanging(string value);
    partial void Onimage_nameChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Product()
		{
			this._DetailTransactions = new EntitySet<DetailTransaction>(new Action<DetailTransaction>(this.attach_DetailTransactions), new Action<DetailTransaction>(this.detach_DetailTransactions));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int NOT NULL")]
		public int stock
		{
			get
			{
				return this._stock;
			}
			set
			{
				if ((this._stock != value))
				{
					this.OnstockChanging(value);
					this.SendPropertyChanging();
					this._stock = value;
					this.SendPropertyChanged("stock");
					this.OnstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_name", DbType="VarChar(200)")]
		public string image_name
		{
			get
			{
				return this._image_name;
			}
			set
			{
				if ((this._image_name != value))
				{
					this.Onimage_nameChanging(value);
					this.SendPropertyChanging();
					this._image_name = value;
					this.SendPropertyChanged("image_name");
					this.Onimage_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DetailTransaction", Storage="_DetailTransactions", ThisKey="id", OtherKey="product_id")]
		public EntitySet<DetailTransaction> DetailTransactions
		{
			get
			{
				return this._DetailTransactions;
			}
			set
			{
				this._DetailTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="category_id", OtherKey="id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._category_id = value.id;
					}
					else
					{
						this._category_id = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailTransactions(DetailTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DetailTransactions(DetailTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
}
#pragma warning restore 1591
